// Generated by view binder compiler. Do not edit!
package com.akapps.todoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.akapps.todoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DailogDairyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton cancleDailog;

  @NonNull
  public final AppCompatEditText enterDescription;

  @NonNull
  public final AppCompatEditText enterTitle;

  @NonNull
  public final AppCompatButton saveDailog;

  @NonNull
  public final AppCompatTextView updateTitle;

  private DailogDairyBinding(@NonNull LinearLayout rootView, @NonNull AppCompatButton cancleDailog,
      @NonNull AppCompatEditText enterDescription, @NonNull AppCompatEditText enterTitle,
      @NonNull AppCompatButton saveDailog, @NonNull AppCompatTextView updateTitle) {
    this.rootView = rootView;
    this.cancleDailog = cancleDailog;
    this.enterDescription = enterDescription;
    this.enterTitle = enterTitle;
    this.saveDailog = saveDailog;
    this.updateTitle = updateTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DailogDairyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DailogDairyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dailog_dairy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DailogDairyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancle_dailog;
      AppCompatButton cancleDailog = rootView.findViewById(id);
      if (cancleDailog == null) {
        break missingId;
      }

      id = R.id.enter_description;
      AppCompatEditText enterDescription = rootView.findViewById(id);
      if (enterDescription == null) {
        break missingId;
      }

      id = R.id.enter_title;
      AppCompatEditText enterTitle = rootView.findViewById(id);
      if (enterTitle == null) {
        break missingId;
      }

      id = R.id.save_dailog;
      AppCompatButton saveDailog = rootView.findViewById(id);
      if (saveDailog == null) {
        break missingId;
      }

      id = R.id.updateTitle;
      AppCompatTextView updateTitle = rootView.findViewById(id);
      if (updateTitle == null) {
        break missingId;
      }

      return new DailogDairyBinding((LinearLayout) rootView, cancleDailog, enterDescription,
          enterTitle, saveDailog, updateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
