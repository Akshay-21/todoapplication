// Generated by view binder compiler. Do not edit!
package com.akapps.todoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.akapps.todoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserNotesItemListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView dateDairy;

  @NonNull
  public final AppCompatImageView deleteNotes;

  @NonNull
  public final AppCompatTextView descripDairy;

  @NonNull
  public final LinearLayout inner;

  @NonNull
  public final LinearLayout mainParent;

  @NonNull
  public final CardView notesCardView;

  @NonNull
  public final AppCompatTextView timeDairy;

  @NonNull
  public final AppCompatTextView titleDairy;

  @NonNull
  public final AppCompatImageView updateNotes;

  private UserNotesItemListBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView dateDairy, @NonNull AppCompatImageView deleteNotes,
      @NonNull AppCompatTextView descripDairy, @NonNull LinearLayout inner,
      @NonNull LinearLayout mainParent, @NonNull CardView notesCardView,
      @NonNull AppCompatTextView timeDairy, @NonNull AppCompatTextView titleDairy,
      @NonNull AppCompatImageView updateNotes) {
    this.rootView = rootView;
    this.dateDairy = dateDairy;
    this.deleteNotes = deleteNotes;
    this.descripDairy = descripDairy;
    this.inner = inner;
    this.mainParent = mainParent;
    this.notesCardView = notesCardView;
    this.timeDairy = timeDairy;
    this.titleDairy = titleDairy;
    this.updateNotes = updateNotes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserNotesItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserNotesItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_notes_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserNotesItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_dairy;
      AppCompatTextView dateDairy = rootView.findViewById(id);
      if (dateDairy == null) {
        break missingId;
      }

      id = R.id.delete_notes;
      AppCompatImageView deleteNotes = rootView.findViewById(id);
      if (deleteNotes == null) {
        break missingId;
      }

      id = R.id.descrip_dairy;
      AppCompatTextView descripDairy = rootView.findViewById(id);
      if (descripDairy == null) {
        break missingId;
      }

      id = R.id.inner;
      LinearLayout inner = rootView.findViewById(id);
      if (inner == null) {
        break missingId;
      }

      LinearLayout mainParent = (LinearLayout) rootView;

      id = R.id.notesCardView;
      CardView notesCardView = rootView.findViewById(id);
      if (notesCardView == null) {
        break missingId;
      }

      id = R.id.time_dairy;
      AppCompatTextView timeDairy = rootView.findViewById(id);
      if (timeDairy == null) {
        break missingId;
      }

      id = R.id.title_dairy;
      AppCompatTextView titleDairy = rootView.findViewById(id);
      if (titleDairy == null) {
        break missingId;
      }

      id = R.id.update_notes;
      AppCompatImageView updateNotes = rootView.findViewById(id);
      if (updateNotes == null) {
        break missingId;
      }

      return new UserNotesItemListBinding((LinearLayout) rootView, dateDairy, deleteNotes,
          descripDairy, inner, mainParent, notesCardView, timeDairy, titleDairy, updateNotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
